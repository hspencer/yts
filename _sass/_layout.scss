.grid-body {
  display: grid;
  min-height: 100vh;
  margin: 0 auto;
  grid-template-columns: 200px 1fr;
  grid-template-rows: 5fr 1fr;
  grid-template-areas:
    "nav pag"
    "fut fut";

  main {
    p {
      hyphens: auto;
    }

    img {
      max-width: 100%;
      &.special {
        position: relative;
        z-index: 1000;
        border-radius: 1ex;
        border: 1px solid $color-line;
        transform-origin: center;
        rotate: -3deg;
        margin: 2em auto -1em auto;
        filter: opacity(0.78);
        @include long-shadow(box, 45, $color-text, 20, 0.05);
        &:hover {
          filter: none;
        }
      }
      &.portrait {
        display: block;
        max-width: 30%;
        border-radius: 50%;
        margin: 8em auto 0 auto;
        @include long-shadow(box, 45, transparentize($color-primary, 0.5), 40, 0.015);
        border: 1px solid $color-primary;

        @media only screen and (max-width: $breakpoint-small) {
          max-width: 70%;
        }
      }
      &.main-pic {
        border-radius: 1ex;
        @include long-shadow(box, 45, $color-primary, 10, 0.1);
        border: 1px solid $color-primary;
      }
    }
  }
}

aside {
  #nav-elements {
    position: fixed;
    width: 12.5em;
  }

  header {
    grid-area: nav;

    a {
      //position: absolute;
    }
  }

  nav {
    grid-area: nav;
  }
}

main {
  grid-area: pag;
  grid-template-columns: repeat(auto-fit, minmax(200px, 540px));
  margin: 4em 0 0 0;
  padding: 0 1em;
}

footer {
  grid-area: fut;
  background: $background-gradient;
  border-top: 1px solid $color-line;
  padding: 1.8em 0 0 0;
  font-size: 80%;
  display: flex;
  align-content: flex-start;
  justify-content: space-evenly;
  flex-direction: column;
  align-items: center;
  bottom: 0;
  position: relative;

  img.cc {
    position: relative;
    width: 1.7267321em;
    bottom: -0.942ex;
  }

  .illustration {
    max-width: 200px;
    position: relative;

    img {
      position: relative;
      bottom: 0;
    }
    #abeja {
      width: 25%;
      right: -59%;
      top: 21%;
      transform-origin: center;
      animation: vueloAbeja 1s infinite ease-in-out;
    }
    #flores {
      width: 100%;
    }
  }

  p {
    text-align: center;
    padding: 0 1em;
    font-size: 0.8em;
    a {
      display: inline-block;
      padding: 0 0.7ex;
      border-radius: 0.7ex;
      margin: 0 0.3ex;

      transition: all 0.5s ease;
      background-color: transparentize($color-secondary, 0.5);

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: inherit; /* Hereda el fondo del enlace */
        filter: blur(8px); /* Aplicar desenfoque al fondo */
        z-index: -1; /* Asegurar que el pseudo-elemento esté detrás del contenido del enlace */
        backdrop-filter: blur(8px); /* Desenfoque del fondo */
      }
      &::after {
        content: "";
        display: inline-block;
        background-image: url("/assets/images/feed.svg");
        background-size: contain; /* Asegura que el SVG se ajuste al tamaño del pseudo-elemento */
        background-repeat: no-repeat;

        position: absolute;

        top: 0;

        width: 13px;
        height: 13px;
        right: -8px;
        transform: translateY(-50%); /* Centra verticalmente */
      }
      &:hover {
        color: white;
        background-color: $color-text;
      }
    }
  }
}

@media only screen and (max-width: $breakpoint-small) {
  .grid-body {
    grid-template-columns: 111px minmax(50vw, 1fr);
    #nav-elements {
      width: 111px;
    }
    .news-grid {
      grid-template-columns: 1fr;
    }
  }
}


@media only screen and (max-width: $breakpoint-medium) {
  .grid-carousel{
    display: block !important;
    margin: 0;
    padding: 0;
  }
}


@keyframes vueloAbeja {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  20% {
    transform: translate(-60%, -45%) rotate(-10deg);
  }
  40% {
    transform: translate(-50%, -55%) rotate(10deg);
  }
  60% {
    transform: translate(-40%, -50%) rotate(-10deg);
  }
  80% {
    transform: translate(-50%, -45%) rotate(10deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
}
