@mixin long-shadow($type: box, $angle: 45, $color: pink, $length: 17, $alpha: 1) {
  $shadows: ();
  $x-multiplier: 0.7071;
  $y-multiplier: 0.7071;

  @if $angle == 0 {
    $x-multiplier: 1;
    $y-multiplier: 0;
  } @else if $angle == 45 {
    $x-multiplier: 0.7071;
    $y-multiplier: 0.7071;
  } @else if $angle == 90 {
    $x-multiplier: 0;
    $y-multiplier: 1;
  } @else if $angle == 135 {
    $x-multiplier: -0.7071;
    $y-multiplier: 0.7071;
  } @else if $angle == 180 {
    $x-multiplier: -1;
    $y-multiplier: 0;
  } @else if $angle == 225 {
    $x-multiplier: -0.7071;
    $y-multiplier: -0.7071;
  } @else if $angle == 270 {
    $x-multiplier: 0;
    $y-multiplier: -1;
  } @else if $angle == 315 {
    $x-multiplier: 0.7071;
    $y-multiplier: -0.7071;
  } @else {
    @error "Ángulo no soportado: #{$angle}. Solo se admiten ángulos comunes como 0, 45, 90, 135, 180, 225, 270, 315.";
  }

  @for $i from 1 through $length {
    $transparency: $alpha * (1 - ($i / $length));
    
    // Calcular los desplazamientos X e Y según el ángulo
    $x-offset: $i * $x-multiplier;
    $y-offset: $i * $y-multiplier;
    
    // Crear la sombra con los valores calculados
    $current-shadow: #{$x-offset}px #{$y-offset}px 0 rgba($color, $transparency);

    $shadows: append($shadows, $current-shadow, comma);
  }
  
  // Aplicar las sombras según el tipo
  @if $type == box {
    box-shadow: $shadows;
  } @else if $type == text {
    text-shadow: $shadows;
  } @else if $type == svg {
    filter: drop-shadow($shadows);
  } @else {
    @warn "Tipo de sombra no reconocido: #{$type}. Solo se admite 'box-shadow', 'text-shadow', o 'svg-shadow'.";
  }
}
